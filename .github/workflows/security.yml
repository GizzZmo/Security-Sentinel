name: 🔐 Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly security scans on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  dependency-scan:
    name: 📦 Dependency Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔍 Run npm audit
      run: |
        echo "### NPM Security Audit 📊" >> $GITHUB_STEP_SUMMARY
        npm audit --audit-level moderate --json > audit-report.json || true
        
        # Parse and display results
        if [ -s audit-report.json ]; then
          # Basic parsing without jq for compatibility
          vulnerabilities=$(grep -o '"vulnerabilities":{[^}]*}' audit-report.json | head -1 || echo "Unable to parse vulnerabilities")
          echo "**Vulnerabilities found:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "$vulnerabilities" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        else
          echo "✅ No vulnerabilities found!" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: 📤 Upload audit report
      uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08
      with:
        name: security-audit-report
        path: audit-report.json
        retention-days: 30
      if: always()

  codeql-analysis:
    name: 🔍 CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    # ⚠️  IMPORTANT: Advanced CodeQL Configuration Conflict Resolution
    # 
    # If you see this error: "CodeQL analyses from advanced configurations cannot be processed when the default setup is enabled"
    # 
    # 🔧 QUICK FIX: See .github/CODEQL_QUICK_FIX.md for 5-minute solution
    # 📖 DETAILED GUIDE: See .github/CODEQL_SETUP.md for comprehensive instructions
    # 
    # 🎯 TL;DR: Go to Repository Settings → Security → Code scanning → Disable "Default setup"
    #          Direct link: https://github.com/GizzZmo/Security-Sentinel/settings/security_analysis
    # 
    # ✅ This advanced configuration provides:
    #    - Multi-language analysis (JavaScript + C++)
    #    - Custom C++ build integration  
    #    - Matrix strategy for comprehensive coverage
    #    - Integration with other security tools
    # 
    # 🚨 NO CODE CHANGES NEEDED - This is a GitHub repository settings issue
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'cpp']
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      
    - name: 🔍 Initialize CodeQL
      uses: github/codeql-action/init@64d10c13136e1c5bce3e5fbde8d4906eeaafc885
      with:
        languages: ${{ matrix.language }}
        
    - name: 🔨 Auto-build
      uses: github/codeql-action/autobuild@64d10c13136e1c5bce3e5fbde8d4906eeaafc885
      if: matrix.language == 'javascript'
      
    - name: 🔨 Manual build for C++
      if: matrix.language == 'cpp'
      run: |
        # Install build dependencies for C++ analysis
        sudo apt-get update
        sudo apt-get install -y cmake build-essential
        
        # Configure and build
        mkdir -p build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Debug
        make -j$(nproc)
        
        # Verify the build was successful
        if [ -f "bin/SecuritySentinel" ]; then
          echo "✅ C++ build successful"
          ls -la bin/
        else
          echo "❌ C++ build failed - executable not found"
          exit 1
        fi
        
    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@64d10c13136e1c5bce3e5fbde8d4906eeaafc885

  secret-scan:
    name: 🔒 Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      with:
        fetch-depth: 0  # Full history for better secret detection
        
    - name: 🔍 Run GitLeaks
      uses: gitleaks/gitleaks-action@44c470ffc35caa8b1eb3e8012ca53c2f9bea4eb5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🔍 Run TruffleHog
      uses: trufflesecurity/trufflehog@682eda677ac970a4d88b82d3cf2a4c681a5a1bd0
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
      continue-on-error: true

  license-scan:
    name: 📄 License Compliance Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 📄 Check licenses
      run: |
        npx license-checker --summary > license-summary.txt
        echo "### License Summary 📄" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        cat license-summary.txt >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        
    - name: 📤 Upload license report
      uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08
      with:
        name: license-report
        path: license-summary.txt
        retention-days: 30

  security-summary:
    name: 📊 Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-scan, codeql-analysis, secret-scan, license-scan]
    if: always()
    
    steps:
    - name: 📊 Generate Security Report
      run: |
        echo "# 🔐 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Scan Type | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| 📦 Dependency Scan | ${{ needs.dependency-scan.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 🔍 CodeQL Analysis | ${{ needs.codeql-analysis.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 🔒 Secret Scan | ${{ needs.secret-scan.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 📄 License Scan | ${{ needs.license-scan.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🔗 **Action:** Review the Security tab for detailed findings" >> $GITHUB_STEP_SUMMARY